//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IIProjectClient.IIVehicleService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/IIProjectService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IIVehicleService.IVehicleService")]
    public interface IVehicleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/GetData", ReplyAction="http://tempuri.org/IVehicleService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/GetData", ReplyAction="http://tempuri.org/IVehicleService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IVehicleService/GetDataUsingDataContractResponse")]
        IIProjectClient.IIVehicleService.CompositeType GetDataUsingDataContract(IIProjectClient.IIVehicleService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IVehicleService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<IIProjectClient.IIVehicleService.CompositeType> GetDataUsingDataContractAsync(IIProjectClient.IIVehicleService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/XmlAnswer", ReplyAction="http://tempuri.org/IVehicleService/XmlAnswerResponse")]
        System.Xml.Linq.XElement XmlAnswer(System.DateTime start, System.DateTime end, string locationEPC, string location, string user, bool authenticated, bool inputError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/XmlAnswer", ReplyAction="http://tempuri.org/IVehicleService/XmlAnswerResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> XmlAnswerAsync(System.DateTime start, System.DateTime end, string locationEPC, string location, string user, bool authenticated, bool inputError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/FordonPassageConstruct", ReplyAction="http://tempuri.org/IVehicleService/FordonPassageConstructResponse")]
        System.Xml.Linq.XElement FordonPassageConstruct(System.Xml.Linq.XElement epcisEvent, string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/FordonPassageConstruct", ReplyAction="http://tempuri.org/IVehicleService/FordonPassageConstructResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> FordonPassageConstructAsync(System.Xml.Linq.XElement epcisEvent, string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/GetElementValue", ReplyAction="http://tempuri.org/IVehicleService/GetElementValueResponse")]
        string GetElementValue(System.Xml.Linq.XElement element);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/GetElementValue", ReplyAction="http://tempuri.org/IVehicleService/GetElementValueResponse")]
        System.Threading.Tasks.Task<string> GetElementValueAsync(System.Xml.Linq.XElement element);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/AuthenticateUser", ReplyAction="http://tempuri.org/IVehicleService/AuthenticateUserResponse")]
        bool AuthenticateUser(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/AuthenticateUser", ReplyAction="http://tempuri.org/IVehicleService/AuthenticateUserResponse")]
        System.Threading.Tasks.Task<bool> AuthenticateUserAsync(string user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVehicleServiceChannel : IIProjectClient.IIVehicleService.IVehicleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VehicleServiceClient : System.ServiceModel.ClientBase<IIProjectClient.IIVehicleService.IVehicleService>, IIProjectClient.IIVehicleService.IVehicleService {
        
        public VehicleServiceClient() {
        }
        
        public VehicleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VehicleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VehicleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VehicleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public IIProjectClient.IIVehicleService.CompositeType GetDataUsingDataContract(IIProjectClient.IIVehicleService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<IIProjectClient.IIVehicleService.CompositeType> GetDataUsingDataContractAsync(IIProjectClient.IIVehicleService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public System.Xml.Linq.XElement XmlAnswer(System.DateTime start, System.DateTime end, string locationEPC, string location, string user, bool authenticated, bool inputError) {
            return base.Channel.XmlAnswer(start, end, locationEPC, location, user, authenticated, inputError);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> XmlAnswerAsync(System.DateTime start, System.DateTime end, string locationEPC, string location, string user, bool authenticated, bool inputError) {
            return base.Channel.XmlAnswerAsync(start, end, locationEPC, location, user, authenticated, inputError);
        }
        
        public System.Xml.Linq.XElement FordonPassageConstruct(System.Xml.Linq.XElement epcisEvent, string location) {
            return base.Channel.FordonPassageConstruct(epcisEvent, location);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> FordonPassageConstructAsync(System.Xml.Linq.XElement epcisEvent, string location) {
            return base.Channel.FordonPassageConstructAsync(epcisEvent, location);
        }
        
        public string GetElementValue(System.Xml.Linq.XElement element) {
            return base.Channel.GetElementValue(element);
        }
        
        public System.Threading.Tasks.Task<string> GetElementValueAsync(System.Xml.Linq.XElement element) {
            return base.Channel.GetElementValueAsync(element);
        }
        
        public bool AuthenticateUser(string user) {
            return base.Channel.AuthenticateUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> AuthenticateUserAsync(string user) {
            return base.Channel.AuthenticateUserAsync(user);
        }
    }
}
